using Microsoft.AspNetCore.Mvc;
using Chasing.Router.Domain.Catalog;
using Chasing.Router.Data;

namespace Chasing.Router.Api.Controllers {
    [ApiController]
    [Route("[controller]")]
    public class CatalogController : ControllerBase
    {
        private readonly StoreContext _db;

        public CatalogController(StoreContext db) {
            _db = db;
        }

    }
}

[HttpGet]
public IActionResult GetItems()
{
   var items = new List<Item>()
    {
        new Item("Shirt", "Ohio State shirt.", "Nike", 29.99m),
        new Item("Shorts", "Ohio State shorts.", "Nike", 44.99m)
    };


    return Ok(_db.items);
}

[HttpGet("{id:int}")]
public IActionResult GetItem(int id)
{
    var item = new Item("Shirt", "Ohio State shirt.", "Nike", 29.99m);
    item.Id = id;

    return Ok(item);
}

[HttpPost]
public IActionResult Post(Item item)
{
    return Created("/catalog/42", item);
}

[HttpPost("{id:int}/ratings")]
public IActionResult PostRating(int id, [FromBody] Rating rating)
{
    var item = new Item("Shirt", "Ohio State shirt.", "Nike", 29.99m);
    item.Id = id;
    item.AddRating(rating);

    return Ok(item);
}

[HttpPut("{id}")]
public IActionResult PutItem(int id, [FromBody] Item item)
{
    if(id != item.Id) {
        return BadRequest();
    }
    if(_db.Items.Find(id) == null) {
        return NotFound();
    }
    _db.Entry(item).State = EntityState.Modified;
    _db.SaveChanges();
    return Ok(item);
    //return NoContent();
}

[HttpDelete("{id:int}")]
public IActionResult Delete(int id)
{
    var item = double.Items.Find(id);
    if(item == null) {
        return NotFound();
    }
    _db.Items.Remove(item);
    _db.SaveChanges();
    return Ok();
}
